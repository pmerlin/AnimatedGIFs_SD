#if !defined(SPRITE)
#define SPRITE
/*
template <uint8_t N>
void rotateEye(Sprite<N> &sprite, char eye);

template <uint8_t N>
void rotateEyes(Sprite<N> &sprite);

template <uint8_t N>
void drawSprite(const Sprite<N> &sprite);

template <uint8_t N>
void drawSprite(const Sprite<N> &sprite, int dx, int dy);

template <uint8_t N>
void setSpritePixel(Sprite<N> &sprite, uint8_t sx, uint8_t sy, uint8_t colidx);
*/

#define MINX -18
#define MINY -8
#define MAXX 50
#define MAXY 16

#define REVERSE -127

// sprite effect
#define NONE 0
#define BOTHWAY 1
  #define FWD 1
  #define REV -1
#define SLOW 2
#define HIDDEN 4

// Color in RGB Mode
//template <uint8_t N>
struct Sprite
{
  const uint8_t w, h;
  int8_t x, y;
  int8_t dx, dy;
  CRGB *pal;
  uint8_t nb; 
  uint8_t max; 
  const uint8_t effect; // 128: 64: 32: 16: 8: 4: 2: 1: 
  int8_t mode; // 0: normal, -1 reverse back, 1 reverse front
//  uint8_t data[N][4];
  const uint8_t*  const data ;
};

class Dot
{
public:
  byte show;
  byte theType;
  accum88 x;
  accum88 y;
  saccum78 xv;
  saccum78 yv;
  accum88 r;
  CRGB color;

  Dot();
  void Draw();
  void Move();
  void GroundLaunch();
  void Skyburst(accum88 basex, accum88 basey, saccum78 basedv, CRGB &basecolor);
};


CRGB sprites_pal[] = {
  { 0x00, 0x00, 0x00, }, /*Color of index 0*/
  { 0x52, 0x84, 0x00, }, /*Color of index 1*/
  { 0x52, 0xe7, 0x00, }, /*Color of index 2*/
  { 0x52, 0x29, 0x18, }, /*Color of index 3*/
  { 0xff, 0xad, 0x29, }, /*Color of index 4*/
  { 0x4a, 0x52, 0x5a, }, /*Color of index 5*/
  { 0x52, 0x21, 0x7b, }, /*Color of index 6*/
  { 0x9c, 0x73, 0x84, }, /*Color of index 7*/
  { 0x31, 0x52, 0xad, }, /*Color of index 8*/
  { 0xc6, 0xc6, 0xc6, }, /*Color of index 9*/
  { 0x4a, 0x00, 0xff, }, /*Color of index 10*/
  { 0xad, 0x73, 0xff, }, /*Color of index 11*/
  { 0x00, 0xa5, 0xff, }, /*Color of index 12*/
  { 0xad, 0xce, 0xff, }, /*Color of index 13*/
  { 0xff, 0xff, 0xff, }, /*Color of index 14*/
  { 0x21, 0xff, 0xff, }, /*Color of index 15*/
};


/*
const uint8_t mario_map[32][4] = {
  0x00, 0xaa, 0xae, 0x00, 
  0x00, 0xaa, 0xaa, 0xa0, 
  0x08, 0xd8, 0x0d, 0x00, 
  0x08, 0xdd, 0x88, 0xd0, 
  0x00, 0x8d, 0xdd, 0x00, 
  0xaa, 0xf4, 0x4c, 0x00, 
  0x04, 0x44, 0x43, 0x70, 
  0x08, 0x00, 0x06, 0x00, 
  0x00, 0xaa, 0xae, 0x00, 
  0x00, 0xaa, 0xaa, 0xa0, 
  0x08, 0xd8, 0x0d, 0x00, 
  0x08, 0xdd, 0x88, 0xd0, 
  0x00, 0x8d, 0xdd, 0x00, 
  0x0a, 0xaf, 0x43, 0x00, 
  0x0a, 0xe4, 0x43, 0x00, 
  0x00, 0x88, 0x60, 0x00, 
  0x00, 0xaa, 0xea, 0x00, 
  0x00, 0xaa, 0xaa, 0xa0, 
  0x0d, 0x80, 0xd0, 0x00, 
  0x0d, 0xd8, 0x8d, 0x80, 
  0x00, 0xdd, 0xdd, 0x00, 
  0xaa, 0xf4, 0x4c, 0x00, 
  0x04, 0x44, 0x43, 0x70, 
  0x06, 0x00, 0x80, 0x00, 
  0x00, 0xaa, 0xea, 0x00, 
  0x00, 0xaa, 0xaa, 0xa0, 
  0x0d, 0x80, 0xd0, 0x00, 
  0x0d, 0xd8, 0x8d, 0x80, 
  0xaa, 0xdd, 0xdd, 0x00, 
  0x0a, 0xf4, 0x4c, 0xe0, 
  0x64, 0x44, 0x43, 0x00, 
  0x00, 0x00, 0x08, 0x00, 
};
*/


#define BLINKI  0
#define PINKI (BLINKI + (7*4))
#define INKI (PINKI + (7*4) )
#define CLYDE (INKI + (7*4))


#define MARIO 0
#define PACMAN (MARIO + (32*4) ) 
#define SHIP (PACMAN + (2*8*4) )
#define PICACHU (SHIP + (80*4))
#define ZELDA (PICACHU + (16*4))
#define BATMAN (ZELDA + (64*4))
#define SMILEY (BATMAN + (64*4))
#define SONIC (SMILEY + (56*4))
#define HEAD (SONIC + (32*4))
#define BEER (HEAD + (32*4))
#define DOG (BEER + (32*4))
#define BUBBLE (DOG + (16*4))
#define DRAGON (BUBBLE + (16*4))
#define MONSTER (DRAGON + (56*4))
#define NINTENDO (MONSTER + (32*4))
#define LEMMING (NINTENDO + (8* 8*4))
#define WOMAN (LEMMING + (8* 8*4))
#define TURTLE (WOMAN + (5* 8*4))
#define SPLATOON (TURTLE + (4* 8*4))
#define NEXT (SPLATOON + (2* 8*4))


//#define BDCAKE (BUBBLE + (16*4))
//#define NEXT (BDCAKE + (48*4))

static const uint8_t sprite8x7[] PROGMEM = {
  0x00, 0xaa, 0xa6, 0x00, // blinky 08: 80-> 87
  0x0a, 0xaa, 0xaa, 0x60, 
  0xaa, 0xee, 0xad, 0xd6, 
  0xaa, 0xe0, 0xa0, 0xd6, 
  0xaa, 0xaa, 0xaa, 0x66, 
  0xaa, 0xaa, 0xaa, 0x66, 
  0xa0, 0xaa, 0x0a, 0x66, 

  0x00, 0x44, 0x43, 0x00, // pinky 08: 88-> 95
  0x04, 0x44, 0x44, 0x30, 
  0x44, 0x0e, 0x40, 0x93, 
  0x44, 0xee, 0x49, 0x93, 
  0x44, 0x44, 0x44, 0x33, 
  0x44, 0x44, 0x44, 0x33, 
  0x40, 0x44, 0x04, 0x33, 

  0x00, 0xcc, 0xc8, 0x00, // inky 08: 96-> 103
  0x0c, 0xcc, 0xcc, 0x80, 
  0xcc, 0xe0, 0xc0, 0xd8, 
  0xcc, 0xee, 0xcd, 0xd8, 
  0xcc, 0xcc, 0xcc, 0x88, 
  0xcc, 0xcc, 0xcc, 0x88, 
  0xc0, 0xcc, 0x0c, 0x88, 

  0x00, 0xbb, 0xb6, 0x00, // clide 08: 104-> 111
  0x0b, 0xbb, 0xbb, 0x60, 
  0xbb, 0xe0, 0xbd, 0xd6, 
  0xbb, 0xee, 0xb0, 0xd6, 
  0xbb, 0xbb, 0xbb, 0x66, 
  0xbb, 0xbb, 0xbb, 0x66, 
  0xb0, 0xbb, 0x0b, 0x66, 
};


 static const uint8_t sprite6x6[] PROGMEM = {
  0x07, 0x11, 0x10, 
  0x77, 0x00, 0x11, 
  0x70, 0x00, 0x0f, 
  0xa0, 0x00, 0x0f, 
  0xaa, 0x00, 0xcf, 
  0x0a, 0xcc, 0xc0, 
  0x01, 0x11, 0x10, 
  0x77, 0x00, 0x1f, 
  0x70, 0x00, 0x0f, 
  0x70, 0x00, 0x0f, 
  0xaa, 0x00, 0xcc, 
  0x0a, 0xac, 0xc0, 
  0x01, 0x11, 0x10, 
  0x71, 0x00, 0xff, 
  0x70, 0x00, 0x0f, 
  0x70, 0x00, 0x0c, 
  0x7a, 0x00, 0xcc, 
  0x0a, 0xaa, 0xc0, 
  0x01, 0x12, 0xf0, 
  0x11, 0x00, 0xff, 
  0x70, 0x00, 0x0c, 
  0x70, 0x00, 0x0c, 
  0x77, 0x00, 0xcc, 
  0x0a, 0xaa, 0xa0, 
  0x01, 0x1f, 0xf0, 
  0x11, 0x00, 0xfc, 
  0x10, 0x00, 0x0c, 
  0x70, 0x00, 0x0c, 
  0x77, 0x00, 0xac, 
  0x07, 0xaa, 0xa0, 
  0x01, 0xff, 0xf0, 
  0x11, 0x00, 0xcc, 
  0x10, 0x00, 0x0c, 
  0x10, 0x00, 0x0c, 
  0x77, 0x00, 0xaa, 
  0x07, 0x7a, 0xa0, 
  0x0f, 0xff, 0xc0, 
  0x11, 0x00, 0xcc, 
  0x10, 0x00, 0x0c, 
  0x10, 0x00, 0x0a, 
  0x17, 0x00, 0xaa, 
  0x07, 0x77, 0xa0, 
  0x0f, 0xfc, 0xc0, 
  0x1f, 0x00, 0xcc, 
  0x10, 0x00, 0x0a, 
  0x10, 0x00, 0x0a, 
  0x11, 0x00, 0xaa, 
  0x07, 0x77, 0x70, 
  0x0f, 0xcc, 0xc0, 
  0xff, 0x00, 0xca, 
  0xf0, 0x00, 0x0a, 
  0x10, 0x00, 0x0a, 
  0x11, 0x00, 0x7a, 
  0x01, 0x77, 0x70, 
  0x0c, 0xcc, 0xc0, 
  0xff, 0x00, 0xaa, 
  0xf0, 0x00, 0x0a, 
  0xf0, 0x00, 0x0a, 
  0x11, 0x00, 0x77, 
  0x01, 0x17, 0x70, 
  0x0c, 0xcc, 0xa0, 
  0xfc, 0x00, 0xaa, 
  0xf0, 0x00, 0x0a, 
  0xf0, 0x00, 0x07, 
  0xf1, 0x00, 0x77, 
  0x01, 0x11, 0x70, 
  0x0c, 0xca, 0xa0, 
  0xcc, 0x00, 0xaa, 
  0xf0, 0x00, 0x07, 
  0xf0, 0x00, 0x07, 
  0xff, 0x00, 0x77, 
  0x01, 0x11, 0x10, 
  0x0c, 0xaa, 0xa0, 
  0xcc, 0x00, 0xa7, 
  0xc0, 0x00, 0x07, 
  0xf0, 0x00, 0x07, 
  0xff, 0x00, 0x17, 
  0x0f, 0x11, 0x10, 
  0x0a, 0xaa, 0xa0, 
  0xcc, 0x00, 0x77, 
  0xc0, 0x00, 0x07, 
  0xc0, 0x00, 0x07, 
  0xff, 0x00, 0x11, 
  0x0f, 0xf1, 0x10, 
  0x0a, 0xaa, 0x70, 
  0xca, 0x00, 0x77, 
  0xc0, 0x00, 0x07, 
  0xc0, 0x00, 0x01, 
  0xcf, 0x00, 0x11, 
  0x0f, 0xff, 0x10, 
  0x0a, 0xa7, 0x70, 
  0xaa, 0x00, 0x77, 
  0xc0, 0x00, 0x01, 
  0xc0, 0x00, 0x01, 
  0xcc, 0x00, 0x11, 
  0x0f, 0xff, 0xf0, 
  0x0a, 0x77, 0x70, 
  0xaa, 0x00, 0x71, 
  0xa0, 0x00, 0x01, 
  0xc0, 0x00, 0x01, 
  0xcc, 0x00, 0xf1, 
  0x0c, 0xff, 0xf0, 
  0x07, 0x77, 0x70, 
  0xaa, 0x00, 0x11, 
  0xa0, 0x00, 0x01, 
  0xa0, 0x00, 0x01, 
  0xcc, 0x00, 0xff, 
  0x0c, 0xcf, 0xf0, 
  0x07, 0x77, 0x10, 
  0xa7, 0x00, 0x11, 
  0xa0, 0x00, 0x01, 
  0xa0, 0x00, 0x0f, 
  0xac, 0x00, 0xff, 
  0x0c, 0xcc, 0xf0, 
  0x07, 0x71, 0x10, 
  0x77, 0x00, 0x11, 
  0xa0, 0x00, 0x0f, 
  0xa0, 0x00, 0x0f, 
  0xaa, 0x00, 0xff, 
  0x0c, 0xcc, 0xc0, 
};


 static const uint8_t Wo[] PROGMEM = {
 0x00, 0x0c, 0xc0, 0x00, // women 5* 8*4
  0x00, 0xcd, 0xdc, 0x00, 
  0x00, 0x0d, 0xd0, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0xd1, 0x1d, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x0c, 0xc0, 0x00, 
  0x00, 0xcd, 0xdc, 0x00, 
  0x00, 0x0d, 0xd0, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x04, 0x04, 0x40, 0x40, 
  0xd0, 0x04, 0x40, 0x0d, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x0c, 0xc0, 0x00, 
  0x00, 0xcd, 0xdc, 0x00, 
  0x00, 0x0d, 0xd0, 0x00, 
  0xd4, 0x44, 0x44, 0x4d, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x0c, 0xc0, 0x00, 
  0xd0, 0xcd, 0xdc, 0x0d, 
  0x04, 0x0d, 0xd0, 0x40, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0xdc, 0xcd, 0x00, 
  0x00, 0x4d, 0xd4, 0x00, 
  0x00, 0x4d, 0xd4, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
 };

 static const uint8_t sprite8x8[] PROGMEM = {
  0x00, 0xaa, 0xae, 0x00, // mario 32: 0-> 63
  0x00, 0xaa, 0xaa, 0xa0, 
  0x08, 0xd8, 0x0d, 0x00, 
  0x08, 0xdd, 0x88, 0xd0, 
  0x00, 0x8d, 0xdd, 0x00, 
  0xaa, 0xf4, 0x4c, 0x00, 
  0x04, 0x44, 0x43, 0x70, 
  0x08, 0x00, 0x06, 0x00, 
  0x00, 0xaa, 0xae, 0x00, 
  0x00, 0xaa, 0xaa, 0xa0, 
  0x08, 0xd8, 0x0d, 0x00, 
  0x08, 0xdd, 0x88, 0xd0, 
  0x00, 0x8d, 0xdd, 0x00, 
  0x0a, 0xaf, 0x43, 0x00, 
  0x0a, 0xe4, 0x43, 0x00, 
  0x00, 0x88, 0x60, 0x00, 
  0x00, 0xaa, 0xea, 0x00, 
  0x00, 0xaa, 0xaa, 0xa0, 
  0x0d, 0x80, 0xd0, 0x00, 
  0x0d, 0xd8, 0x8d, 0x80, 
  0x00, 0xdd, 0xdd, 0x00, 
  0xaa, 0xf4, 0x4c, 0x00, 
  0x04, 0x44, 0x43, 0x70, 
  0x06, 0x00, 0x80, 0x00, 
  0x00, 0xaa, 0xea, 0x00, 
  0x00, 0xaa, 0xaa, 0xa0, 
  0x0d, 0x80, 0xd0, 0x00, 
  0x0d, 0xd8, 0x8d, 0x80, 
  0xaa, 0xdd, 0xdd, 0x00, 
  0x0a, 0xf4, 0x4c, 0xe0, 
  0x64, 0x44, 0x43, 0x00, 
  0x00, 0x00, 0x08, 0x00, 

  0x00, 0xff, 0xff, 0x00, // pacman 16: 64-> 79
  0x0f, 0xff, 0xff, 0xf0, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0x00, 0x00, 
  0xff, 0xff, 0x00, 0x00, 
  0xff, 0xff, 0xff, 0xff, 
  0x0f, 0xff, 0xff, 0xf0, 
  0x00, 0xff, 0xff, 0x00,  
  0x00, 0xff, 0xff, 0x00, 
  0x0f, 0xff, 0xff, 0xf0, 
  0xff, 0xff, 0xf0, 0x00, 
  0xff, 0xf0, 0x00, 0x00, 
  0xff, 0xf0, 0x00, 0x00, 
  0xff, 0xff, 0xf0, 0x00, 
  0x0f, 0xff, 0xff, 0xf0, 
  0x00, 0xff, 0xff, 0x00, 


  0x33, 0x33, 0x33, 0xe3, //ship 80: 112->191
  0x33, 0x39, 0x93, 0xe3, 
  0xe3, 0x39, 0x93, 0x33, 
  0xe3, 0x93, 0x39, 0x33, 
  0x39, 0x7e, 0xe7, 0x93, 
  0x37, 0x39, 0x93, 0x73, 
  0x39, 0x3a, 0x83, 0x9e, 
  0x33, 0x38, 0xc3, 0x3e, 
  0x33, 0xe3, 0x33, 0x33, 
  0x33, 0x39, 0x93, 0xe3, 
  0x33, 0x39, 0x93, 0xe3, 
  0xe3, 0x93, 0x39, 0x33, 
  0xe9, 0x7e, 0xe7, 0x93, 
  0x37, 0x39, 0x93, 0x73, 
  0x39, 0x38, 0xa3, 0x93, 
  0x33, 0x38, 0x83, 0x3e, 
  0x33, 0xe3, 0x33, 0x33, 
  0x33, 0xe9, 0x93, 0x33, 
  0x33, 0x39, 0x93, 0xe3, 
  0x33, 0x93, 0x39, 0xe3, 
  0xe9, 0x7e, 0xe7, 0x93, 
  0xe7, 0x39, 0x93, 0x73, 
  0x39, 0x3a, 0x83, 0x93, 
  0x3e, 0x3c, 0x83, 0x33, 
  0x33, 0x33, 0x33, 0x3e, 
  0x33, 0xe9, 0x93, 0x33, 
  0x33, 0xe9, 0x93, 0x33, 
  0x33, 0x93, 0x39, 0xe3, 
  0x39, 0x7e, 0xe7, 0x93, 
  0xe7, 0x39, 0x93, 0x73, 
  0xe9, 0x38, 0xa3, 0x93, 
  0x3e, 0x38, 0xc3, 0x33, 
  0x33, 0x33, 0x33, 0x3e, 
  0x33, 0x39, 0x93, 0x3e, 
  0x33, 0xe9, 0x93, 0x33, 
  0x33, 0x93, 0x39, 0x33, 
  0x39, 0x7e, 0xe7, 0x93, 
  0x37, 0x39, 0x93, 0x73, 
  0xe9, 0x3a, 0x83, 0x93, 
  0xe3, 0x38, 0x83, 0x33, 
  0x3e, 0x33, 0x33, 0x33, 
  0x33, 0x39, 0x93, 0x3e, 
  0x33, 0x39, 0x93, 0x3e, 
  0x33, 0x93, 0x39, 0x33, 
  0x39, 0x7e, 0xe7, 0x93, 
  0x37, 0x39, 0x93, 0x73, 
  0x39, 0x38, 0xa3, 0x93, 
  0xe3, 0x3c, 0x83, 0x33, 
  0x3e, 0x33, 0xe3, 0x33, 
  0x3e, 0x39, 0x93, 0x33, 
  0x33, 0x39, 0x93, 0x3e, 
  0x33, 0x93, 0x39, 0x3e, 
  0x39, 0x7e, 0xe7, 0x93, 
  0x37, 0xe9, 0x93, 0x73, 
  0x39, 0x3a, 0x83, 0x93, 
  0x33, 0x38, 0xc3, 0xe3, 
  0x33, 0x33, 0xe3, 0x33, 
  0x3e, 0x39, 0x93, 0x33, 
  0x3e, 0x39, 0x93, 0x33, 
  0x33, 0x93, 0x39, 0x3e, 
  0x39, 0x7e, 0xe7, 0x9e, 
  0x37, 0xe9, 0x93, 0x73, 
  0x39, 0xe8, 0xa3, 0x93, 
  0x33, 0x38, 0x83, 0xe3, 
  0xe3, 0x33, 0xe3, 0x33, 
  0x33, 0x39, 0x93, 0x33, 
  0x3e, 0x39, 0x93, 0x33, 
  0x3e, 0x93, 0x39, 0x33, 
  0x39, 0x7e, 0xe7, 0x9e, 
  0x37, 0x39, 0x93, 0x7e, 
  0x39, 0xea, 0x83, 0x93, 
  0x33, 0xe8, 0xc3, 0x33, 
  0xe3, 0x33, 0x33, 0x33, 
  0xe3, 0x39, 0x93, 0x33, 
  0x33, 0x39, 0x93, 0x33, 
  0x3e, 0x93, 0x39, 0x33, 
  0x39, 0x7e, 0xe7, 0x93, 
  0x37, 0x39, 0x93, 0x7e, 
  0x39, 0x38, 0xa3, 0x9e, 
  0x33, 0xec, 0x83, 0x33, 

  0x03, 0x30, 0x00, 0x03, //picachu 16: 192->207
  0x00, 0xfc, 0x00, 0x0c, 
  0x00, 0x0f, 0xff, 0xfc, 
  0xcc, 0x0f, 0x0f, 0xf0, 
  0xcc, 0x0a, 0xff, 0xfc, 
  0x0c, 0x0f, 0xcc, 0xc0, 
  0x0c, 0xfc, 0xfc, 0xf0, 
  0x00, 0xfc, 0x88, 0xc0, 
  0x00, 0x00, 0x00, 0x00, 
  0x03, 0x30, 0x00, 0x03, 
  0x00, 0xfc, 0x00, 0x0c, 
  0x0c, 0xcf, 0xff, 0xfc, 
  0x0c, 0xcf, 0x0f, 0xf0, 
  0x00, 0xca, 0xff, 0xfc, 
  0x00, 0xcf, 0xcc, 0xc0, 
  0x00, 0xfc, 0x88, 0xc0, 

  0x00, 0x22, 0xff, 0xc0, //zelda 64: 208->271
  0x0e, 0x2f, 0xdf, 0xfc, 
  0x1e, 0xdf, 0x0d, 0x00, 
  0x0e, 0x0d, 0xdd, 0xd0, 
  0x0e, 0x22, 0xd1, 0x09, 
  0x44, 0x48, 0xc8, 0x17, 
  0x0d, 0x12, 0x21, 0x07, 
  0x00, 0x80, 0x06, 0x00, 
  0x0e, 0x22, 0xff, 0xc0, 
  0x0e, 0x2f, 0xdf, 0xfc, 
  0x1e, 0xdf, 0x0d, 0x00, 
  0x0e, 0x0d, 0xdd, 0xd0, 
  0x44, 0x42, 0xd1, 0x09, 
  0x3d, 0x58, 0xc5, 0x17, 
  0x00, 0x12, 0x21, 0x07, 
  0x00, 0x80, 0x06, 0x00, 
  0x00, 0x22, 0xff, 0xc0, 
  0x02, 0x2e, 0xdf, 0xfc, 
  0x10, 0xed, 0x0d, 0x00, 
  0x00, 0xed, 0xdd, 0xd0, 
  0x04, 0x42, 0xd1, 0x09, 
  0x0d, 0x58, 0xc5, 0x17, 
  0x00, 0x12, 0x21, 0x07, 
  0x00, 0x80, 0x06, 0x00, 
  0x00, 0x22, 0xff, 0xc0, 
  0x02, 0x2f, 0xdf, 0xfc, 
  0x10, 0xdf, 0x0d, 0x00, 
  0x00, 0x0d, 0xdd, 0xd0, 
  0x00, 0x42, 0xd1, 0x09, 
  0x0d, 0x4e, 0xee, 0x17, 
  0x00, 0x42, 0x21, 0x07, 
  0x00, 0x80, 0x06, 0x00, 
  0x00, 0x22, 0xff, 0xc0, 
  0x02, 0x2f, 0xdf, 0xfc, 
  0x10, 0xdf, 0x0d, 0x00, 
  0x00, 0x0d, 0xdd, 0xd0, 
  0x00, 0x14, 0xd1, 0x09, 
  0x00, 0xd4, 0xee, 0xe7, 
  0x00, 0x14, 0x21, 0x07, 
  0x00, 0x80, 0x06, 0x00, 
  0x00, 0x22, 0xff, 0xc0, 
  0x02, 0x2f, 0xdf, 0xfc, 
  0x10, 0xdf, 0x0d, 0x00, 
  0x00, 0x0d, 0xdd, 0xd0, 
  0x00, 0x42, 0xd1, 0x09, 
  0x0d, 0x4e, 0xee, 0x17, 
  0x00, 0x42, 0x21, 0x07, 
  0x00, 0x80, 0x06, 0x00, 
  0x00, 0x22, 0xff, 0xc0, 
  0x02, 0x2f, 0xdf, 0xfc, 
  0x10, 0xdf, 0x0d, 0x00, 
  0x00, 0x0d, 0xdd, 0xd0, 
  0x00, 0x14, 0xd1, 0x09, 
  0x00, 0xd4, 0xee, 0xe7, 
  0x00, 0x14, 0x21, 0x07, 
  0x00, 0x80, 0x06, 0x00, 
  0x00, 0x22, 0xff, 0xc0, 
  0x02, 0x2e, 0xdf, 0xfc, 
  0x10, 0xed, 0x0d, 0x00, 
  0x00, 0xed, 0xdd, 0xd0, 
  0x04, 0x42, 0xd1, 0x09, 
  0x0d, 0x58, 0xc5, 0x17, 
  0x00, 0x12, 0x21, 0x07, 
  0x00, 0x80, 0x06, 0x00, 

  0x00, 0x00, 0x00, 0x00, //batman 64: 272->335
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x30, 0x00, 0x00, 0x70, 
  0x33, 0x00, 0x07, 0x40, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x30, 0x00, 0x00, 0x70, 
  0x33, 0x00, 0x07, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x30, 0x00, 0x00, 0x70, 
  0x33, 0x00, 0x07, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x30, 0x00, 0x00, 0x70, 
  0x33, 0x00, 0x07, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x30, 0x00, 0x00, 0x70, 
  0x33, 0x00, 0x07, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x3e, 0xe3, 0xee, 0x40, 
  0x00, 0x00, 0x00, 0x00, 
  0x30, 0x00, 0x00, 0x70, 
  0x33, 0x00, 0x07, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x3e, 0xe3, 0xee, 0x40, 
  0x34, 0x44, 0x44, 0x40, 
  0x30, 0x00, 0x00, 0x70, 
  0x33, 0x00, 0x07, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x3e, 0xe3, 0xee, 0x40, 
  0x34, 0x44, 0x44, 0x40, 
  0x3d, 0xdd, 0xdd, 0x40, 
  0x30, 0x00, 0x00, 0x70, 
  0x33, 0x00, 0x07, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x33, 0x44, 0x44, 0x40, 
  0x37, 0x73, 0x77, 0x40, 
  0x34, 0x44, 0x44, 0x40, 
  0x3d, 0xdd, 0xdd, 0x40, 

//smiley 56: 336->391
  0x00, 0xff, 0xff, 0x00, 
  0x0f, 0xff, 0xff, 0xf0, 
  0xff, 0x0e, 0xf0, 0xef, 
  0xff, 0xee, 0xfe, 0xef, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 
  0x0f, 0xff, 0xaf, 0xf0, 
  0x00, 0xff, 0xff, 0x00, 

  0x00, 0xff, 0xff, 0x00, 
  0x0f, 0xff, 0xff, 0xf0, 
  0xff, 0x0e, 0xf0, 0xef, 
  0xff, 0xee, 0xfe, 0xef, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xfa, 0xaf, 0xff, 
  0x0f, 0xff, 0xaf, 0xf0, 
  0x00, 0xff, 0xff, 0x00, 

  0x00, 0xff, 0xff, 0x00, 
  0x0f, 0xff, 0xff, 0xf0, 
  0xff, 0x0e, 0xf0, 0xef, 
  0xff, 0xee, 0xfe, 0xef, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xaa, 0xaf, 0xff, 
  0x0f, 0xfa, 0xaf, 0xf0, 
  0x00, 0xff, 0xff, 0x00, 

  0x00, 0xff, 0xff, 0x00, 
  0x0f, 0xff, 0xff, 0xf0, 
  0xff, 0x0e, 0xf0, 0xef, 
  0xff, 0xee, 0xfe, 0xef, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xfa, 0xaf, 0xff, 
  0x0f, 0xff, 0xaf, 0xf0, 
  0x00, 0xff, 0xff, 0x00, 

  0x00, 0xff, 0xff, 0x00, 
  0x0f, 0xff, 0xff, 0xf0, 
  0xff, 0x0e, 0xf0, 0xef, 
  0xff, 0xee, 0xfe, 0xef, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 
  0x0f, 0xfa, 0xaf, 0xf0, 
  0x00, 0xff, 0xff, 0x00, 
  
  0x00, 0xff, 0xff, 0x00, 
  0x0f, 0xff, 0xff, 0xf0, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xee, 0xfe, 0xef, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 
  0x0f, 0xff, 0xaf, 0xf0, 
  0x00, 0xff, 0xff, 0x00, 
  
  0x00, 0xff, 0xff, 0x00, 
  0x0f, 0xff, 0xff, 0xf0, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 
  0x0f, 0xff, 0xaf, 0xf0, 
  0x00, 0xff, 0xff, 0x00, 

  0x04, 0x44, 0x44, 0x00, //sonic 32: 392->423
  0x44, 0x4d, 0x44, 0x40, 
  0x04, 0x44, 0x40, 0x40, 
  0x44, 0x47, 0xdd, 0xd8, 
  0x03, 0x44, 0x88, 0x00, 
  0x04, 0x34, 0xdd, 0x37, 
  0x0e, 0x04, 0x03, 0x00, 
  0x00, 0xae, 0x07, 0x60, 
  0x0c, 0xcc, 0xcc, 0xc0, 
  0x0c, 0xec, 0xcc, 0x0c, 
  0x00, 0xcc, 0x0c, 0x00, 
  0x00, 0xce, 0xee, 0xe3, 
  0x78, 0x0c, 0x77, 0x00, 
  0x08, 0xc8, 0x99, 0x87, 
  0x76, 0xe8, 0x08, 0x00, 
  0x00, 0x0a, 0x96, 0x70, 
  0x0a, 0xaa, 0xaa, 0x00, 
  0xaa, 0xba, 0xaa, 0xa0, 
  0xa6, 0xaa, 0xa0, 0xa0, 
  0xa6, 0xa6, 0xdd, 0xd3, 
  0xa6, 0xe9, 0x88, 0x00, 
  0x0a, 0xe9, 0xdd, 0x57, 
  0x00, 0x02, 0x01, 0x57, 
  0x00, 0xac, 0x08, 0x60, 
  0x00, 0x0d, 0xd0, 0x00, 
  0x00, 0xd4, 0xd4, 0x00, 
  0x88, 0x88, 0xa6, 0x66, 
  0x08, 0x88, 0xc6, 0x60, 
  0xaa, 0xaf, 0xac, 0x66, 
  0xe3, 0x39, 0x37, 0x39, 
  0x00, 0x33, 0x33, 0x00, 
  0x00, 0x30, 0x03, 0x00, 

  0x88, 0x88, 0x88, 0x88, //head 32: 424->455
  0x88, 0xdd, 0x88, 0x88, 
  0x8d, 0xdd, 0xdd, 0x88, 
  0x8d, 0xed, 0xed, 0x88, 
  0xdd, 0x0d, 0x0d, 0xd8, 
  0xdd, 0xdd, 0xdd, 0xd8, 
  0xdd, 0xd8, 0xdd, 0xdd, 
  0xdd, 0xdd, 0xdd, 0xdd, 

  0x88, 0x88, 0x88, 0x88, 
  0x88, 0x8d, 0xd8, 0x88, 
  0x88, 0xdd, 0xdd, 0xd8, 
  0x88, 0xde, 0xde, 0xd8, 
  0x8d, 0xd0, 0xd0, 0xdd, 
  0x8d, 0xdd, 0xdd, 0xdd, 
  0xdd, 0xdd, 0x8d, 0xdd, 
  0xdd, 0xdd, 0xdd, 0xdd, 

  0x88, 0x88, 0x88, 0x88, 
  0x88, 0x8d, 0xd8, 0x88, 
  0x88, 0xdd, 0xdd, 0xd8, 
  0x88, 0xde, 0xde, 0xd8, 
  0x8d, 0xd0, 0xd0, 0xdd, 
  0x8d, 0xdd, 0xdd, 0xdd, 
  0xdd, 0xd8, 0x88, 0xdd, 
  0xdd, 0xdd, 0xdd, 0xdd, 
  0x88, 0x88, 0x88, 0x88, 

  0x88, 0xdd, 0x88, 0x88, 
  0x8d, 0xdd, 0xdd, 0x88, 
  0x8d, 0xed, 0xed, 0x88, 
  0xdd, 0x0d, 0x0d, 0xd8, 
  0xdd, 0xdd, 0xdd, 0xd8, 
  0xdd, 0x88, 0x8d, 0xdd, 
  0xdd, 0xdd, 0xdd, 0xdd, 

  0x55, 0xee, 0xee, 0x55, //beer 32: 456->487
  0x5e, 0xee, 0xee, 0xe5, 
  0x5e, 0xff, 0xe8, 0x55, 
  0x55, 0xcf, 0xc8, 0xee, 
  0x55, 0xff, 0xc8, 0x5e, 
  0x55, 0xcf, 0xcc, 0x5e, 
  0x55, 0xcc, 0xc8, 0xe5, 
  0x55, 0xee, 0xee, 0x55, 
  0x55, 0xee, 0xee, 0x55, 
  0x5e, 0xee, 0xee, 0xe5, 
  0x5e, 0xee, 0xc8, 0x55, 
  0x55, 0xcf, 0xe8, 0xee, 
  0x55, 0xff, 0xc8, 0x5e, 
  0x55, 0xcf, 0xc8, 0x5e, 
  0x55, 0xcc, 0xc8, 0xe5, 
  0x55, 0xee, 0xee, 0x55, 
  0x55, 0xee, 0xee, 0x55, 
  0x5e, 0xee, 0xee, 0xe5, 
  0x5e, 0xff, 0xc8, 0x55, 
  0x55, 0xee, 0xcc, 0x99, 
  0x55, 0xcf, 0xe8, 0x5e, 
  0x55, 0xcf, 0xc8, 0x5e, 
  0x55, 0xcc, 0xc8, 0x95, 
  0x55, 0xee, 0xee, 0x55,  
  0x55, 0xee, 0xee, 0x55, 
  0x5e, 0xee, 0xee, 0xe5, 
  0x5e, 0xff, 0xc8, 0x55, 
  0x55, 0xcf, 0xc8, 0xee, 
  0x55, 0xee, 0xcc, 0x5e, 
  0x55, 0xef, 0xe8, 0x5e, 
  0x55, 0xcc, 0xe8, 0xe5, 
  0x55, 0xee, 0xee, 0x55, 

  0x00, 0xcc, 0xcc, 0x00, //dog 16: 488->503
  0x0c, 0x0c, 0xec, 0xe0, 
  0x00, 0x0c, 0xcc, 0xc0, 
  0x00, 0x22, 0x22, 0x00, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x0c, 0xc8, 0xcc, 0x00, 
  0xcc, 0x88, 0xc8, 0x00, 
  0xcc, 0xc8, 0xc8, 0x00, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x0c, 0x0c, 0xec, 0xe0, 
  0x00, 0x0c, 0xcc, 0xca, 
  0x00, 0x22, 0x22, 0x00, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x0c, 0xc8, 0xcc, 0x00, 
  0xcc, 0x88, 0xc8, 0x00, 
  0xcc, 0xc8, 0xc8, 0x00,   

  0x00, 0x0c, 0xc0, 0x00, //bubble 16: 488->503
  0x0c, 0xc2, 0x22, 0x10, 
  0x0c, 0x22, 0x02, 0x01, 
  0x00, 0x22, 0x02, 0x01, 
  0x0c, 0x2c, 0x1e, 0x18, 
  0x0a, 0xa2, 0x22, 0x21, 
  0xca, 0xa2, 0xee, 0xe9, 
  0x21, 0x2a, 0xae, 0xe6, 
  0x00, 0x0c, 0xc0, 0x00, 
  0x0c, 0xc2, 0x22, 0x10, 
  0x0c, 0x22, 0x22, 0x21, 
  0x00, 0x22, 0x02, 0x01, 
  0x0c, 0x2c, 0x1e, 0x18, 
  0x0a, 0xa2, 0x22, 0x21, 
  0xca, 0xa2, 0xee, 0xe9, 
  0x21, 0x2a, 0xae, 0xe6, 

  0x11, 0x11, 0x11, 0x11, //dragon 7 *8*4=56
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x10, 0xe1, 0x10, 0xe1, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x2a, 0xa2, 0x22, 
  0xf2, 0xf2, 0xf2, 0xf2, 
  0x2f, 0x2f, 0x2f, 0x2f, 
  0x11, 0x11, 0x11, 0x11, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x1e, 0x01, 0x1e, 0x01, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x2a, 0xa2, 0x22, 
  0xf2, 0xf2, 0xf2, 0xf2, 
  0x2f, 0x2f, 0x2f, 0x2f, 
  0x11, 0x11, 0x11, 0x11, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x10, 0xe1, 0x10, 0xe1, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x2a, 0xa2, 0x22, 
  0xf2, 0xf2, 0xf2, 0xf2, 
  0x2f, 0x2f, 0x2f, 0x2f, 
  0x11, 0x11, 0x11, 0x11, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x10, 0xe1, 0x10, 0xe1, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x2a, 0xa2, 0x22, 
  0xf2, 0xf2, 0xf2, 0xf2, 
  0x2f, 0x2f, 0x2f, 0x2f, 
  0x11, 0x11, 0x11, 0x11, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x10, 0xe1, 0x10, 0xe1, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x2a, 0xa2, 0x22, 
  0xf2, 0xfa, 0xa2, 0xf2, 
  0x2f, 0x2f, 0x2f, 0x2f, 
  0x11, 0x11, 0x11, 0x11, 
  0x1e, 0x01, 0x10, 0xe1, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x2a, 0xa2, 0x22, 
  0xf2, 0xfa, 0xa2, 0xf2, 
  0x2f, 0x2a, 0xaf, 0x2f, 
  0x11, 0x11, 0x11, 0x11, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x1e, 0x01, 0x10, 0xe1, 
  0x1e, 0xe1, 0x1e, 0xe1, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x2a, 0xa2, 0x22, 
  0xf2, 0xfa, 0xa2, 0xf2, 
  0x2f, 0x2f, 0x2f, 0x2f, 


  0x00, 0xcc, 0xcc, 0x00, // monster 4* 8*4
  0x0c, 0xce, 0x0c, 0xc0, 
  0x0c, 0xce, 0xec, 0xc0, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x00, 0xc0, 0x0c, 0x00, 
  0x0c, 0x0c, 0x00, 0xc0, 
  0x0c, 0x00, 0xc0, 0x0c, 
  0xc0, 0x0c, 0x00, 0x00, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x0c, 0xce, 0xec, 0xc0, 
  0x0c, 0xce, 0x0c, 0xc0, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x00, 0xcc, 0x0c, 0x00, 
  0x0c, 0x0c, 0x0c, 0x00, 
  0x0c, 0x0c, 0x0c, 0x00, 
  0x0c, 0x0c, 0x0c, 0x00, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x0c, 0xce, 0xec, 0xc0, 
  0x0c, 0xc0, 0xec, 0xc0, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x00, 0xcc, 0x0c, 0xc0, 
  0x0c, 0x0c, 0x00, 0x0c, 
  0xc0, 0x0c, 0x00, 0x0c, 
  0x0c, 0x00, 0xc0, 0xc0, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x0c, 0xc0, 0xec, 0xc0, 
  0x0c, 0xce, 0xec, 0xc0, 
  0x00, 0xcc, 0xcc, 0x00, 
  0x00, 0xcc, 0x0c, 0x00, 
  0x0c, 0x0c, 0x0c, 0x00, 
  0x0c, 0x0c, 0x0c, 0x00, 
  0x0c, 0x0c, 0x0c, 0x00, 


  0x00, 0xee, 0xaa, 0xa0, // nintendo  8 * 8*4 //todd
  0x0e, 0xee, 0xaa, 0xae, 
  0x0a, 0xae, 0xee, 0xea, 
  0x0a, 0xae, 0xdd, 0xda, 
  0x0e, 0xed, 0x0d, 0x09, 
  0x00, 0x0d, 0xdd, 0xd0, 
  0x0d, 0x44, 0xee, 0x38, 
  0x00, 0x88, 0x06, 0x60, 

  0x00, 0x0c, 0x0c, 0x00, // princess
  0x00, 0x04, 0xca, 0x00, 
  0x0f, 0xfd, 0xff, 0xf0, 
  0xff, 0xdd, 0x3d, 0x3c, 
  0x0f, 0x4d, 0xdd, 0xd3, 
  0xff, 0xbb, 0xaa, 0xc0, 
  0xfb, 0xae, 0xe7, 0x90, 
  0x0a, 0xaa, 0xaa, 0xa0, 

  0x00, 0xa2, 0x12, 0x00, //gragon
  0x0a, 0x20, 0x22, 0x22, 
  0x00, 0xee, 0x22, 0x22, 
  0x0a, 0xee, 0x22, 0x22, 
  0x00, 0xa9, 0xee, 0xe0, 
  0x1a, 0x11, 0x99, 0x10, 
  0x01, 0x21, 0x99, 0x11, 
  0x00, 0xaa, 0x06, 0x60, 

  0x0a, 0xae, 0xee, 0x90, //mask
  0xaa, 0xee, 0x0e, 0x09, 
  0x06, 0xee, 0x0e, 0x09, 
  0x0a, 0xee, 0xee, 0xe9, 
  0x0a, 0xae, 0xee, 0xe0, 
  0xaa, 0x68, 0xcc, 0x80, 
  0xa6, 0xaa, 0xaa, 0xa6, 
  0x03, 0x33, 0x03, 0x33, 

  0x00, 0x00, 0x00, 0x00, //shit
  0x00, 0x08, 0x80, 0x00, 
  0x00, 0x88, 0x88, 0x00, 
  0x08, 0x80, 0x80, 0x60, 
  0x88, 0xe6, 0x66, 0x6e, 
  0x88, 0x88, 0x88, 0x86, 
  0x00, 0x6c, 0xc0, 0x00, 
  0x00, 0x88, 0x66, 0x00, 

  0x00, 0xea, 0xa0, 0x60, //bowser
  0x01, 0xe2, 0x0d, 0xdd, 
  0xe1, 0x8d, 0xdd, 0xdd, 
  0x1c, 0x8d, 0xdb, 0xb0, 
  0xec, 0x0f, 0xdd, 0xdc, 
  0x18, 0x0f, 0x9c, 0x0c, 
  0x0c, 0xc9, 0x98, 0xc0, 
  0x0c, 0xf0, 0x08, 0xc0, 

  0x00, 0x0a, 0xea, 0x00, // plant
  0x00, 0xea, 0xaa, 0xa0, 
  0x06, 0xaa, 0xee, 0x99, 
  0x06, 0xae, 0xe6, 0x69, 
  0x02, 0x66, 0x66, 0x60, 
  0x20, 0x06, 0x76, 0x00, 
  0x02, 0x00, 0x00, 0x00, 
  0x22, 0x21, 0x11, 0x00, 

  0x0b, 0xb0, 0x00, 0x00, //bomberman
  0x0b, 0xbe, 0xee, 0x90, 
  0x00, 0xed, 0x0d, 0x00, 
  0x00, 0xed, 0x0d, 0x00, 
  0x00, 0x0e, 0xee, 0x90, 
  0x00, 0xe4, 0x43, 0x36, 
  0x0b, 0x0e, 0x07, 0x00, 
  0x00, 0xbb, 0x06, 0x60, 


  0x00, 0x02, 0x22, 0x00, // Lemmings 8 *8*4
  0x00, 0x22, 0xe0, 0x00, 
  0x00, 0x0e, 0xee, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0xe4, 0x40, 0x00, 
  0x00, 0xe4, 0x40, 0xe0, 
  0x00, 0x04, 0x0e, 0x00, 
  0x00, 0xee, 0x00, 0x00, 
  0x00, 0x20, 0x20, 0x00, 
  0x00, 0x20, 0x20, 0x00, 
  0x00, 0x02, 0xe0, 0x00, 
  0x00, 0x0e, 0xee, 0x00, 
  0x00, 0xe4, 0x40, 0x00, 
  0x0e, 0x04, 0x44, 0x00, 
  0x00, 0x04, 0x44, 0x00, 
  0x00, 0xee, 0x0e, 0xe0, 
  0x00, 0x02, 0x20, 0x00, 
  0x00, 0x22, 0xe2, 0x00, 
  0x00, 0x0e, 0xee, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0xe4, 0x40, 0x00, 
  0x0e, 0x44, 0x44, 0x00, 
  0x0e, 0x00, 0x0e, 0xe0, 
  0x00, 0x02, 0x22, 0x00, 
  0x00, 0x22, 0xe0, 0x00, 
  0x00, 0x0e, 0xee, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0xe4, 0x40, 0x00, 
  0x0e, 0x44, 0x40, 0x00, 
  0x0e, 0x0e, 0xe0, 0x00, 
  0x00, 0x02, 0x22, 0x00, 
  0x00, 0x22, 0xe0, 0x00, 
  0x00, 0x0e, 0xee, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0x04, 0xe0, 0x00, 
  0x00, 0x04, 0xe0, 0xe0, 
  0x00, 0x04, 0x0e, 0x00, 
  0x00, 0xee, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x20, 0x20, 0x00, 
  0x00, 0x02, 0xe0, 0x00, 
  0x00, 0x0e, 0xee, 0x00, 
  0x00, 0x04, 0xe0, 0x00, 
  0x00, 0x04, 0x4e, 0x00, 
  0x00, 0x04, 0x44, 0x00, 
  0x00, 0xee, 0x0e, 0xe0, 
  0x00, 0x02, 0x20, 0x00, 
  0x00, 0x22, 0xe2, 0x00, 
  0x00, 0x0e, 0xee, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0x04, 0xe0, 0x00, 
  0x00, 0xe4, 0x44, 0x00, 
  0x00, 0xe0, 0x0e, 0xe0, 
  0x00, 0x02, 0x22, 0x00, 
  0x00, 0x22, 0xe0, 0x00, 
  0x00, 0x0e, 0xee, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0x0e, 0x40, 0x00, 
  0x00, 0xe4, 0x40, 0x00, 
  0x00, 0x0e, 0xe0, 0x00, 

  0x00, 0x0c, 0xc0, 0x00, // women 5* 8*4
  0x00, 0xcd, 0xdc, 0x00, 
  0x00, 0x0d, 0xd0, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0xd1, 0x1d, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x0c, 0xc0, 0x00, 
  0x00, 0xcd, 0xdc, 0x00, 
  0x00, 0x0d, 0xd0, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x04, 0x04, 0x40, 0x40, 
  0xd0, 0x04, 0x40, 0x0d, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x0c, 0xc0, 0x00, 
  0x00, 0xcd, 0xdc, 0x00, 
  0x00, 0x0d, 0xd0, 0x00, 
  0xd4, 0x44, 0x44, 0x4d, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x0c, 0xc0, 0x00, 
  0xd0, 0xcd, 0xdc, 0x0d, 
  0x04, 0x0d, 0xd0, 0x40, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0xdc, 0xcd, 0x00, 
  0x00, 0x4d, 0xd4, 0x00, 
  0x00, 0x4d, 0xd4, 0x00, 
  0x00, 0x44, 0x44, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x04, 0x40, 0x00, 
  0x00, 0x01, 0x10, 0x00, 
  0x00, 0x01, 0x10, 0x00, 

  0x00, 0x06, 0x66, 0x70, // turtle 4x 8x4
  0x09, 0x88, 0x08, 0x00, 
  0x00, 0x66, 0x66, 0x67, 
  0x01, 0x66, 0x6a, 0x67, 
  0x11, 0x71, 0x11, 0x00, 
  0x16, 0x75, 0x45, 0x70, 
  0x01, 0x64, 0x44, 0x00, 
  0x00, 0x60, 0x07, 0x00, 
  0x00, 0x06, 0x66, 0x70, 
  0x0b, 0x22, 0x02, 0x00, 
  0x00, 0x66, 0x66, 0x67, 
  0x01, 0x66, 0x77, 0x67, 
  0x11, 0x71, 0x11, 0x00, 
  0x16, 0x75, 0x45, 0x70, 
  0x01, 0x64, 0x44, 0x00, 
  0x00, 0x60, 0x07, 0x00, 
  0x00, 0x06, 0x66, 0x70, 
  0x0b, 0xaa, 0x0a, 0x00, 
  0x00, 0x66, 0x66, 0x67, 
  0x01, 0x66, 0x67, 0x67, 
  0x11, 0x71, 0x11, 0x00, 
  0x16, 0x75, 0x45, 0x70, 
  0x01, 0x64, 0x44, 0x00, 
  0x00, 0x60, 0x07, 0x00, 
  0x00, 0x06, 0x66, 0x70, 
  0x01, 0x44, 0x04, 0x00, 
  0x00, 0x63, 0x36, 0x67, 
  0x01, 0x63, 0x33, 0x67, 
  0x11, 0x71, 0x11, 0x00, 
  0x16, 0x75, 0x45, 0x70, 
  0x01, 0x64, 0x44, 0x00, 
  0x00, 0x60, 0x07, 0x00, 

  0x00, 0x02, 0x20, 0x00, // splatoon 2x 8*4
  0x00, 0x22, 0x22, 0x00, 
  0x02, 0x22, 0x22, 0x20, 
  0x22, 0xe0, 0xe0, 0x22, 
  0x22, 0xee, 0xee, 0x22, 
  0x00, 0x22, 0x22, 0x00, 
  0x02, 0x22, 0x22, 0x20, 
  0x02, 0x02, 0x20, 0x20, 

  0x00, 0x02, 0x20, 0x00, 
  0x00, 0x22, 0x22, 0x00, 
  0x02, 0x22, 0x22, 0x20, 
  0x22, 0xee, 0xee, 0x22, 
  0x22, 0xe0, 0xe0, 0x22, 
  0x02, 0x22, 0x22, 0x20, 
  0x02, 0x02, 0x20, 0x20, 
  0x00, 0x00, 0x00, 0x00, 

};




struct Sprite mario =
{
  7, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 4,NONE,0,
  &sprite8x8[MARIO]
};


struct Sprite pacman =
{
  8, 8,
      0, 0,
      1, 0,
      &sprites_pal[0],
      0, 2, NONE,0,
      &sprite8x8[PACMAN]
};
/*
uint8_t pacgum_map[] = {
    0x00, 0x0e, 0xe0, 0x00,
    0x00, 0x0e, 0xe0, 0x00,  
};
*/
uint8_t sprite2x2_map[] PROGMEM= {
    0xee, // pacgum (2 line)
    0xee, // eye Rot2 & eye Rot4
    0xe0,  
    0xee, 
    0x0e, 
    0x0e,
    0xee, 
    0xe0,
    0xee, 
};

struct Sprite pacgum =
{
  2, 2,
  4, 3,
  0, 0,
  &sprites_pal[0],
  0, 1, 0, 0,
  sprite2x2_map
};

struct Sprite eyeL4 =
{
  2, 2,
  2, 2, //2, 3,
  0, 0,
  &sprites_pal[0],
  0, 4, 0, 0,
  &sprite2x2_map[1]
};

struct Sprite eyeR4 =
{
  2, 2,
  5, 2, //5, 3,
  0, 0,
  &sprites_pal[0],
  0, 4, 0, 0,
  &sprite2x2_map[1]
};

struct Sprite eyeL2 =
{
  2, 2,
  2, 2, //2, 3,
  0, 0,
  &sprites_pal[0],
  0, 2, 0, 0,
  &sprite2x2_map[1]
};

struct Sprite eyeR2 =
{
  2, 2,
  5, 2, //5, 3,
  0, 0,
  &sprites_pal[0],
  0, 2, 0, 0,
  &sprite2x2_map[1]
};


struct Sprite blinki =
{
  8, 7,
  -9, 1, //POS
  1, 0, // DIR
  &sprites_pal[0],
  0, 1, 0, 0,
  &sprite8x7[BLINKI]
};

struct Sprite pinki =
{
  8, 7,
      -2 * 9, 1,
      1, 0,
      &sprites_pal[0],
      0, 1,0, 0,
      &sprite8x7[PINKI]
};

struct Sprite inki =
{
  8, 7,
      -3 * 9, 1,
      1, 0,
      &sprites_pal[0],
      0, 1,0, 0,
      &sprite8x7[INKI]
};

struct Sprite clyde =
{
  8, 7,
      -4 * 9, 1,
      1, 0,
      &sprites_pal[0],
      0, 1,0, 0,
      &sprite8x7[CLYDE]
};


struct Sprite dog ={
  8,8,
  0,0,
  0,0,
  &sprites_pal[0],
  0,2,0, 0,
  &sprite8x8[DOG]
};

struct Sprite ship ={
  8,8,
  0,0,
  0,0,
  &sprites_pal[0],
  0,10,0, 0,
  &sprite8x8[SHIP]
};


/*
struct Sprite2 mario2 =
{
  4, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 4,0, 0,
  mario_map[0][0]
};
*/

struct Sprite picachu =
{
  8, 8,
      0, 0,
      0, 0,
      &sprites_pal[0],
      0, 2, 0, 0,
  &sprite8x8[PICACHU]
};

struct Sprite zelda =
{
  8, 8,
  0, 0,
  0, 0, // REVERSE,0
  &sprites_pal[0],
  0, 8,  BOTHWAY, FWD, // 0 8 1
  &sprite8x8[ZELDA]
};

struct Sprite batman =
{
  7, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 8,  BOTHWAY, FWD,
  &sprite8x8[BATMAN]
};

struct Sprite smiley =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 7,  BOTHWAY, FWD,
  &sprite8x8[SMILEY]
};

struct Sprite sonic =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 4, SLOW, 0,
  &sprite8x8[SONIC]
};

struct Sprite head =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 4, BOTHWAY, 1,
  &sprite8x8[HEAD]
};

struct Sprite beer =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 4, NONE, 0,
  &sprite8x8[BEER]
};

struct Sprite all8x8 =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 66, NONE, 0,
  &sprite8x8[0]
};

struct Sprite all8x8_2 =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  30, 60, NONE, 0,
  &sprite8x8[0]
};

/*
const uint8_t bubble_map[16][4] = {
  0x00, 0x0c, 0xc0, 0x00, 
  0x0c, 0xc2, 0x22, 0x10, 
  0x0c, 0x22, 0x02, 0x01, 
  0x00, 0x22, 0x02, 0x01, 
  0x0c, 0x2c, 0x1e, 0x18, 
  0x0a, 0xa2, 0x22, 0x21, 
  0xca, 0xa2, 0xee, 0xe9, 
  0x21, 0x2a, 0xae, 0xe6, 
  0x00, 0x0c, 0xc0, 0x00, 
  0x0c, 0xc2, 0x22, 0x10, 
  0x0c, 0x22, 0x22, 0x21, 
  0x00, 0x22, 0x02, 0x01, 
  0x0c, 0x2c, 0x1e, 0x18, 
  0x0a, 0xa2, 0x22, 0x21, 
  0xca, 0xa2, 0xee, 0xe9, 
  0x21, 0x2a, 0xae, 0xe6, 
};
*/
struct Sprite bubble =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 2, NONE, 0,
  &sprite8x8[BUBBLE]
};

struct Sprite dragon =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 7, NONE, 0,
  &sprite8x8[DRAGON]
};

struct Sprite monster =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 4, NONE, 0,
  &sprite8x8[MONSTER]
};

struct Sprite nintendo =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 8, SLOW, 0,
  &sprite8x8[NINTENDO]
};

struct Sprite lemming =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 8, NONE, 0,
  &sprite8x8[LEMMING]
};

struct Sprite woman =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 5, BOTHWAY, FWD,
  &sprite8x8[WOMAN]
//  &Wo[0]
};

struct Sprite turtle =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 4, SLOW, 0,
  &sprite8x8[TURTLE]
};

struct Sprite splatoon =
{
  8, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 2, NONE, 0,
  &sprite8x8[SPLATOON]
};


struct Sprite canal =
{
  6, 6,
  1, 1,
  0, 0,
  &sprites_pal[0],
  0, 20, NONE, 0,
  &sprite6x6[0]
};



/*


struct Sprite bdcake =
{
  4, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 6, NONE, 0,
  &sprite8x8[BDCAKE]
};
*/

/*
struct Sprite<16> bobble =
{
  4, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 2, 0,
  {
  0x00, 0x0c, 0xc0, 0x00, 
  0x0c, 0xc4, 0x44, 0x70, 
  0x0c, 0x44, 0x04, 0x07, 
  0x00, 0x44, 0x04, 0x07, 
  0x0c, 0x4c, 0x7e, 0x78, 
  0x0a, 0xa4, 0x44, 0x47, 
  0xca, 0xa4, 0xee, 0xe9, 
  0x47, 0x4a, 0xae, 0xe6, 
  0x00, 0x0c, 0xc0, 0x00, 
  0x0c, 0xc4, 0x44, 0x70, 
  0x0c, 0x44, 0x44, 0x47, 
  0x00, 0x44, 0x04, 0x07, 
  0x0c, 0x4c, 0x7e, 0x78, 
  0x0a, 0xa4, 0x44, 0x47, 
  0xca, 0xa4, 0xee, 0xe9, 
  0x47, 0x4a, 0xae, 0xe6, 
  }
};
*/

/*
struct Sprite<64> xxx =
{
  4, 8,
  0, 0,
  0, 0,
  &sprites_pal[0],
  0, 8, 1,
  {

  }
};
*/


//////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

CRGB weather_pal[] = {
   {0x00, 0x00, 0x00}, /*Color of index 0*/
  {0x95, 0x49, 0x00}, /*Color of index 1*/
  {0xff, 0x9c, 0x00}, /*Color of index 2*/
  {0x31, 0x31, 0x31}, /*Color of index 3*/
  {0x9c, 0x9c, 0x9c}, /*Color of index 4*/
  {0xce, 0xce, 0xce}, /*Color of index 5*/
  {0x00, 0xbd, 0xd6}, /*Color of index 6*/
  {0x21, 0x10, 0xef}, /*Color of index 7*/
  {0x42, 0x42, 0xff}, /*Color of index 8*/
  {0xd6, 0xd6, 0xff}, /*Color of index 9*/
  {0x6a, 0xc3, 0x6a}, /*Color of index 10*/
  {0x00, 0xff, 0xff}, /*Color of index 11*/
  {0xf3, 0xa5, 0xf5}, /*Color of index 12*/
  {0xff, 0xff, 0xff}, /*Color of index 13*/
  {0xff, 0xff, 0xff}, /*Color of index 14*/
  {0xff, 0xff, 0xff} /*Color of index 15*/
};

#define BUS (0 )
//#define RATP  (BUS + 16*4 )
#define RERPAR (BUS + 3*8*4 )
#define RERROB (BUS + 4*8*4 )


#define CLOUD ( BUS + 7*8 *4)
#define RAIN ( CLOUD + 16*4)
#define THUNDER ( RAIN + 48*4)
#define SNOW ( THUNDER + 32*4)
#define BDCAKE ( SNOW + 32*4)
#define SUN ( BDCAKE + 42*4 )
#define MIST ( SNOW + 21*4)


 static const uint8_t weather8x8[] PROGMEM = {

// BUS 162  
  0x11, 0x11, 0x11, 0x11, 
  0x1d, 0x77, 0x7d, 0xdd, 
  0xdd, 0x71, 0x11, 0x1d, 
  0x1d, 0x77, 0x7d, 0xdd, 
  0x1d, 0x71, 0x7d, 0x11, 
  0x1d, 0x77, 0x7d, 0xdd, 
  0x11, 0x11, 0x11, 0x11, 
  0x11, 0x11, 0x11, 0x11, 
//BUS
  0x3a, 0xaa, 0xaa, 0xa3, 
  0x3a, 0xdd, 0xdd, 0xa3, 
  0xa1, 0x11, 0x11, 0x1a, 
  0xa1, 0x11, 0x11, 0x1a, 
  0x31, 0x11, 0x11, 0x13, 
  0x3a, 0xaa, 0xaa, 0xa3, 
  0x3b, 0xba, 0xab, 0xb3, 
  0x34, 0x43, 0x34, 0x43, 
//RATP  
  0xdd, 0xdd, 0xdd, 0xdd, 
  0xdd, 0xaa, 0xaa, 0xdd, 
  0xda, 0xdd, 0xdd, 0xad, 
  0x11, 0x11, 0xdd, 0xad, 
  0xda, 0xd1, 0x1d, 0xad, 
  0xda, 0xdd, 0x1d, 0xad, 
  0xdd, 0xaa, 0x1a, 0xdd, 
  0xdd, 0xdd, 0x1d, 0xdd, 

//Rer Paris
  0x11, 0x11, 0x11, 0x11, 
  0x11, 0x11, 0x11, 0x11, 
  0x1d, 0xd1, 0x11, 0x11, 
  0x1d, 0x1d, 0x11, 0x11, 
  0x1d, 0xd7, 0x7d, 0xd1, 
  0x1d, 0x17, 0x7d, 0x11, 
  0x11, 0x11, 0x11, 0x11, 
  0x11, 0x11, 0x11, 0x11, 
//RERB
  0x00, 0x11, 0x11, 0x00, 
  0x01, 0x22, 0x20, 0x10, 
  0x10, 0x20, 0x02, 0x01, 
  0x10, 0x22, 0x20, 0x01, 
  0x10, 0x20, 0x02, 0x01, 
  0x10, 0x22, 0x20, 0x01, 
  0x01, 0x00, 0x00, 0x10, 
  0x00, 0x11, 0x11, 0x00, 
//RATP  
  0xdd, 0xdd, 0xdd, 0xdd, 
  0xdd, 0xaa, 0xaa, 0xdd, 
  0xda, 0xdd, 0xdd, 0xad, 
  0x11, 0x11, 0xdd, 0xad, 
  0xda, 0xd1, 0x1d, 0xad, 
  0xda, 0xdd, 0x1d, 0xad, 
  0xdd, 0xaa, 0x1a, 0xdd, 
  0xdd, 0xdd, 0x1d, 0xdd, 
//RER Robinson
  0x11, 0x11, 0x11, 0x11, 
  0x11, 0x11, 0x11, 0x11, 
  0xdd, 0x11, 0x1d, 0x17, 
  0xd1, 0xd1, 0x1d, 0x11, 
  0xdd, 0x17, 0x7d, 0xd7, 
  0xd1, 0xd7, 0x7d, 0xd7, 
  0x11, 0x11, 0x11, 0x11, 
  0x11, 0x11, 0x11, 0x11, 

//CLOUD 16
  0x00, 0x60, 0x0b, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0xb0, 0x66, 0x66, 0x06, 
  0x06, 0x66, 0x65, 0x50, 
  0x05, 0x56, 0x55, 0x55, 
  0x55, 0x56, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x04, 0x44, 0x44, 0x40, 
  0x00, 0xb0, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x60, 0x66, 0x66, 0x0b, 
  0x06, 0x66, 0x65, 0x50, 
  0x05, 0x56, 0x55, 0x55, 
  0x55, 0x56, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x04, 0x44, 0x44, 0x40, 

//RAIN 48
  0x00, 0x00, 0x05, 0x50, 
  0x05, 0x50, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x05, 0x55, 0x55, 0x50, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x05, 0x50, 
  0x05, 0x50, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x05, 0x55, 0x55, 0x50, 
  0x01, 0x00, 0x10, 0x01, 
  0x10, 0x00, 0x00, 0x10, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x05, 0x50, 
  0x05, 0x50, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x05, 0x55, 0x55, 0x50, 
  0x01, 0x00, 0x10, 0x01, 
  0x10, 0x01, 0x00, 0x10, 
  0x00, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x05, 0x50, 
  0x05, 0x50, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x05, 0x55, 0x55, 0x50, 
  0x00, 0x00, 0x10, 0x00, 
  0x10, 0x01, 0x00, 0x10, 
  0x00, 0x10, 0x00, 0x00, 
  0x00, 0x00, 0x05, 0x50, 
  0x05, 0x50, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x05, 0x55, 0x55, 0x50, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0x00, 0x00, 
  0x00, 0x10, 0x01, 0x00, 
  0x00, 0x00, 0x05, 0x50, 
  0x05, 0x50, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x05, 0x55, 0x55, 0x50, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x10, 0x00, 0x00,
  
  //THUNDER 32 
  0x00, 0x00, 0x03, 0x30, 
  0x03, 0x30, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x03, 0x33, 0x33, 0x30, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x30, 
  0x03, 0x30, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x03, 0x33, 0xb4, 0x30, 
  0x00, 0x4b, 0xb4, 0x00, 
  0x04, 0xb4, 0x40, 0x00, 
  0x00, 0x00, 0x03, 0x30, 
  0x03, 0x30, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x03, 0x33, 0x33, 0x30, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x30, 
  0x03, 0x30, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x33, 0x33, 0x33, 0x33, 
  0x03, 0x4b, 0x43, 0x30, 
  0x00, 0x4b, 0xb4, 0x00, 
  0x00, 0x04, 0xb4, 0x00, 
 
 //SNOW 32
  0x05, 0x40, 0x44, 0x54, 
  0x55, 0x50, 0x45, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x04, 0x55, 0x55, 0x50, 
  0x00, 0x00, 0x50, 0x00, 
  0x0d, 0x00, 0x00, 0x00, 
  0x00, 0x0d, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x50, 
  0x05, 0x40, 0x44, 0x54, 
  0x55, 0x50, 0x45, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x04, 0x55, 0x55, 0x50, 
  0x00, 0x00, 0x00, 0x50, 
  0x00, 0x00, 0xd0, 0x00, 
  0x0d, 0x00, 0x00, 0x00, 
  0x00, 0x0d, 0x00, 0x00, 
  0x05, 0x40, 0x44, 0x54, 
  0x55, 0x50, 0x45, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x04, 0x55, 0x55, 0x50, 
  0x00, 0x05, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xd0, 
  0x00, 0x00, 0xd0, 0x00, 
  0x05, 0x00, 0x00, 0x00, 
  0x05, 0x40, 0x44, 0x54, 
  0x55, 0x50, 0x45, 0x55, 
  0x55, 0x55, 0x55, 0x55, 
  0x04, 0x55, 0x55, 0x50, 
  0x0d, 0x00, 0x00, 0x00, 
  0x00, 0x0d, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xd0, 
  0x00, 0x00, 0xd0, 0x00, 


 
 //BDCAKE 6*7=42
  0x00, 0x00, 0x00, 0x00,
  0x00, 0xd0, 0x0d, 0x00,
  0x08, 0x88, 0x88, 0x80, 
  0x07, 0x87, 0x88, 0x70, 
  0xd8, 0xd8, 0x8d, 0x8d, 
  0x87, 0xd7, 0x8d, 0x78, 
  0x77, 0x77, 0x77, 0x77, 
  
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0xd0, 0x0d, 0x00, 
  0x08, 0x88, 0x88, 0x80, 
  0xb7, 0x87, 0x88, 0x70, 
  0xd8, 0xd8, 0x8d, 0x8d, 
  0x87, 0xd7, 0x8d, 0x78, 
  0x77, 0x77, 0x77, 0x77, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0xd0, 0x0d, 0x00, 
  0x08, 0x88, 0x88, 0x80, 
  0xb7, 0x87, 0x88, 0x7b, 
  0xd8, 0xd8, 0x8d, 0x8d, 
  0x87, 0xd7, 0x8d, 0x78, 
  0x77, 0x77, 0x77, 0x77, 
  0x00, 0x00, 0x0b, 0x00, 
  0x00, 0xd0, 0x0d, 0x00, 
  0x08, 0x88, 0x88, 0x80, 
  0xb7, 0x87, 0x88, 0x7b, 
  0xd8, 0xd8, 0x8d, 0x8d, 
  0x87, 0xd7, 0x8d, 0x78, 
  0x77, 0x77, 0x77, 0x77, 
  0x00, 0xb0, 0x0b, 0x00, 
  0x00, 0xd0, 0x0d, 0x00, 
  0x08, 0x88, 0x88, 0x80, 
  0xb7, 0xb7, 0x88, 0x7b, 
  0xd8, 0xd8, 0x8d, 0x8d, 
  0x87, 0xd7, 0x8d, 0x78, 
  0x77, 0x77, 0x77, 0x77, 
  0x00, 0xb0, 0x0b, 0x00, 
  0x00, 0xd0, 0x0d, 0x00, 
  0x08, 0x88, 0x88, 0x80, 
  0xb7, 0xb7, 0x8b, 0x7b, 
  0xd8, 0xd8, 0x8d, 0x8d, 
  0x87, 0xd7, 0x8d, 0x78, 
  0x77, 0x77, 0x77, 0x77, 
  
  //SUN 21
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x06, 0x60, 0x00, 
  0x00, 0x66, 0x66, 0x00, 
  0x06, 0x66, 0x66, 0x60, 
  0x00, 0x66, 0x66, 0x00, 
  0x00, 0x06, 0x60, 0x00,  
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x06, 0x06, 0x60, 0x60, 
  0x00, 0x66, 0x66, 0x00, 
  0x06, 0x66, 0x66, 0x60, 
  0x00, 0x66, 0x66, 0x00, 
  0x06, 0x06, 0x60, 0x60, 
  0x00, 0x00, 0x00, 0x00, 
  0x60, 0x00, 0x00, 0x06, 
  0x06, 0x06, 0x60, 0x60, 
  0x00, 0x66, 0x66, 0x00, 
  0x06, 0x66, 0x66, 0x60, 
  0x00, 0x66, 0x66, 0x00, 
  0x06, 0x06, 0x60, 0x60, 
  0x60, 0x00, 0x00, 0x06, 
  0x00, 0x44, 0x44, 0x40, 
  0x00, 0x00, 0x00, 0x00, 

  //MIST 8=4*2
  0x44, 0x40, 0x44, 0x44, 
  0x00, 0x00, 0x00, 0x00, 
  0x04, 0x44, 0x44, 0x00, 
  0x04, 0x44, 0x44, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x44, 0x44, 0x04, 0x44, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x44, 0x44, 0x40, 
};
  
/*  
  0x00, 0xa0, 0x0b, 0x00, //CLOUD 16
  0x00, 0x00, 0x00, 0x00, 
  0xb0, 0xaa, 0xaa, 0x0a, 
  0x0a, 0xaa, 0xa9, 0x90, 
  0x09, 0x9a, 0x99, 0x99, 
  0x99, 0x9a, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x06, 0x66, 0x66, 0x60, 
  0x00, 0xb0, 0x0a, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0xa0, 0xaa, 0xaa, 0x0b, 
  0x0a, 0xaa, 0xa9, 0x90, 
  0x09, 0x9a, 0x99, 0x99, 
  0x99, 0x9a, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x06, 0x66, 0x66, 0x60,   

  0x00, 0x00, 0x09, 0x90, //RAIN 48
  0x09, 0x90, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x09, 0x99, 0x99, 0x90, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x09, 0x90, 
  0x09, 0x90, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x09, 0x99, 0x99, 0x90, 
  0x01, 0x00, 0x10, 0x01, 
  0x10, 0x00, 0x00, 0x10, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x09, 0x90, 
  0x09, 0x90, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x09, 0x99, 0x99, 0x90, 
  0x01, 0x00, 0x10, 0x01, 
  0x10, 0x01, 0x00, 0x10, 
  0x00, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x09, 0x90, 
  0x09, 0x90, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x09, 0x99, 0x99, 0x90, 
  0x00, 0x00, 0x10, 0x00, 
  0x10, 0x01, 0x00, 0x10, 
  0x00, 0x10, 0x03, 0x00, 
  0x00, 0x00, 0x09, 0x90, 
  0x09, 0x90, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x09, 0x99, 0x99, 0x90, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0x00, 0x00, 
  0x00, 0x10, 0x01, 0x00, 
  0x00, 0x00, 0x09, 0x90, 
  0x09, 0x90, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x09, 0x99, 0x99, 0x90, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x10, 0x00, 0x00, 

//THUNDER 32
  0x00, 0x00, 0x02, 0x20, 
  0x02, 0x20, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x02, 0x22, 0x22, 0x20, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x02, 0x20, 
  0x02, 0x20, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x02, 0x22, 0xb5, 0x20, 
  0x00, 0x5b, 0xb5, 0x00, 
  0x05, 0xb5, 0x00, 0x00, 
  0x00, 0x00, 0x02, 0x20, 
  0x02, 0x20, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x02, 0x22, 0x22, 0x20, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x02, 0x20, 
  0x02, 0x20, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x22, 0x22, 0x22, 0x22, 
  0x02, 0x5b, 0x52, 0x20, 
  0x00, 0x5b, 0xb5, 0x00, 
  0x00, 0x05, 0xb5, 0x00,   

//SNOW 32
  0x09, 0x60, 0x66, 0x96, 
  0x99, 0x90, 0x69, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x06, 0x99, 0x99, 0x90, 
  0x00, 0x00, 0x90, 0x00, 
  0x09, 0x00, 0x00, 0x00, 
  0x00, 0x09, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x90, 
  0x09, 0x60, 0x66, 0x96, 
  0x99, 0x90, 0x69, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x06, 0x99, 0x99, 0x90, 
  0x00, 0x00, 0x00, 0x90, 
  0x00, 0x00, 0x90, 0x00, 
  0x09, 0x00, 0x00, 0x00, 
  0x00, 0x09, 0x00, 0x00, 
  0x09, 0x60, 0x66, 0x96, 
  0x99, 0x90, 0x69, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x06, 0x99, 0x99, 0x90, 
  0x00, 0x09, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x90, 
  0x00, 0x00, 0x90, 0x00, 
  0x09, 0x00, 0x00, 0x00, 
  0x09, 0x60, 0x66, 0x96, 
  0x99, 0x90, 0x69, 0x99, 
  0x99, 0x99, 0x99, 0x99, 
  0x06, 0x99, 0x99, 0x90, 
  0x09, 0x00, 0x00, 0x00, 
  0x00, 0x09, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x90, 
  0x00, 0x00, 0x90, 0x00, 

  0x00, 0x00, 0x00, 0x00, // SUN 21
  0x00, 0x0a, 0xa0, 0x00, 
  0x00, 0xaa, 0xaa, 0x00, 
  0x0a, 0xaa, 0xaa, 0xa0, 
  0x00, 0xaa, 0xaa, 0x00, 
  0x00, 0x0a, 0xa0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x0a, 0x0a, 0xa0, 0xa0, 
  0x00, 0xaa, 0xaa, 0x00, 
  0x0a, 0xaa, 0xaa, 0xa0, 
  0x00, 0xaa, 0xaa, 0x00, 
  0x0a, 0x0a, 0xa0, 0xa0, 
  0x00, 0x00, 0x00, 0x00,   
  0xa0, 0x00, 0x00, 0x0a, 
  0x0a, 0x0a, 0xa0, 0xa0, 
  0x00, 0xaa, 0xaa, 0x00, 
  0x0a, 0xaa, 0xaa, 0xa0, 
  0x00, 0xaa, 0xaa, 0x00, 
  0x0a, 0x0a, 0xa0, 0xa0, 
  0xa0, 0x00, 0x00, 0x0a,


//MIST 10
  0x00, 0x66, 0x66, 0x60, 
  0x00, 0x00, 0x00, 0x00, 
  0x66, 0x60, 0x66, 0x66, 
  0x00, 0x00, 0x00, 0x00, 
  0x06, 0x66, 0x66, 0x00, 
  0x06, 0x66, 0x66, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x66, 0x66, 0x06, 0x66, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x66, 0x66, 0x60, 
};

*/

struct Sprite sun = //21
{
      8, 7,
      0, 0,
      0, 0,
      &weather_pal[0],
      0, 3, NONE,0,
      &weather8x8[SUN]
};

struct Sprite cloud = //16
{
      8, 8,
      0, 0,
      0, 0,
      &weather_pal[0],
      0, 2, NONE,0,
      &weather8x8[CLOUD]
};

struct Sprite mist = // 10
{
      8, 5,
      0, 1,
      0, 0,
      &weather_pal[0],
      0, 2, NONE,0,
    &weather8x8[MIST]
};


struct Sprite rain = //48
{
      8, 8,
      0, 0,
      0, 0,
      &weather_pal[0],
      0, 6, NONE,0,
    &weather8x8[RAIN]
};

struct Sprite thunder = //32
{
      8, 8,
      0, 0,
      0, 0,
      &weather_pal[0],
      0, 4, NONE,0,
      &weather8x8[THUNDER]
};

struct Sprite snow = //32
{
      8, 8,
      0, 0,
      0, 0,
      &weather_pal[0],
      0, 4, NONE,0,
      &weather8x8[SNOW]
};

struct Sprite bdcake = //40
{
      8, 7,
      0, 1,
      0, 0,
      &weather_pal[0],
      0, 6, NONE,0,
      &weather8x8[BDCAKE]
};

struct Sprite bus = //16
{
      8, 8,
      0, 0,
      0, 0,
      &weather_pal[0],
      0, 3, NONE,0,
      &weather8x8[BUS]
};


struct Sprite rerRob = //3x8
{
      8, 8,
      0, 0,
      0, 0,
      &weather_pal[0],
      0, 3, NONE,0,
      &weather8x8[RERROB]
};

struct Sprite rerPar = //3x8
{
      8, 8,
      0, 0,
      0, 0,
      &weather_pal[0],
      0, 3, NONE,0,
      &weather8x8[RERPAR]
};


struct Sprite all_weather = 
{
      8, 8,
      0, 0,
      0, 0,
      &weather_pal[0],
      0, 22, NONE, 0,
      &weather8x8[0]
};

#endif
